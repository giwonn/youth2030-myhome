version: '1.0'
# docker compose -f docker-compose.dev.yml up -d --build
# docker compose -f docker-compose.dev.yml down -v

# -d : 서비스 백그라운드로 실행
# --force-recreate : 컨테이너를 지우고 새로 생성
# --build : 서비스 시작 전 이미지를 새로 생성
# -f 기본으로 제공하는 docker-compose.yml이 아닌 다른 파일명을 실행할 때 사용

services:
  # front:
  #   image: youth2030-myhome-front
  #   container_name: youth2030-myhome-front
  #   restart: always
  #   build:
  #     context: ./front-sveltekit
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ./front-sveltekit:/app
  #     - front:/app/node_modules
  #   ports:
  #     - 3000:3000
  #
  #  back:
  #    build:
  #      context: ./back
  #      dockerfile: Dockerfile.dev
  #      # target: unit-test
  #    image: youth2030-myhome-back
  #    container_name: youth2030-myhome-back
  #    restart: always
  #    volumes:
  #      - ./back:/app
  #      - back:/app/node_modules
  #      # - .git:/app/.git

  nginx:
    image: nginx
    container_name: youth2030-myhome-nginx
    restart: always
    ports:
      - 10000:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      #      - front
      #      - back
      - worker

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    image: youth2030-myhome-worker
    container_name: youth2030-myhome-worker
    restart: always
    volumes:
      - ./worker:/usr/app
      - worker:/usr/app/node_modules

  database:
    image: postgres:14-alpine
    container_name: youth2030-myhome-database
    restart: always
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  front:
  back:
  worker:
  database:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./database
